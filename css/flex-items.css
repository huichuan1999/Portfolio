/* Flex layouts are one of the easier ways to style responsive layouts that work on all devices */
/* https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox */

.flex-container {
    display: flex;
    /* all children will now be flex items */
    flex-direction: row;
    /* other option is column */
    flex-wrap: wrap;
    /* means the children will wrap to a new line */
}

.flex-item {
    display: flex;
    /* the following three items can be put on one line: https://developer.mozilla.org/en-US/docs/Web/CSS/flex */
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: 33.33%;
    /*width of the box, take up a quarter of the parent's size*/
    box-sizing: border-box;
    /*this means that we can add padding, line below, and still only take 25% width of parent*/
    padding: 7px;
}

.flex-basis-forth .flex-item {
    flex-basis: 25%;
}

.flex-basis-third .flex-item {
    flex-basis: 33.33%;
}

.flex-basis-half .flex-item {
    flex-basis: 50%;
}

.gameDevContainer1 {
    position: fixed; /* 或 position: fixed; 根据需求选择 */
    width: 32vw; 
    /* padding-top: 3%;
    padding-bottom: 10%; */
    left: 5%; /* 从页面或视口左侧偏移 */
    top: 60%; /* 位于底部 */
    z-index: 10;
}


.gameDevContainer2 {
    position: fixed; /* 或 position: fixed; 根据需求选择 */
    width: 16vw; 
    /* padding-top: 3%;
    padding-bottom: 10%; */
    right: 5%; /* 从页面或视口右侧偏移 */
    top: 60%; /* 位于顶部 */
}


.flex-column-container {
    display: flex;
    flex-direction: column; /* 确保子元素竖直排列 */
    align-items: flex-start; /* 使子元素靠近容器的左边 */
    width: 100%; /* 或者根据需要设定一个具体的宽度 */
    padding-left: 0; /* 如果需要，确保没有左侧内边距 */
}


.flex-item a {
    /* border-radius: 10px; */
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 100%;
    height: 0;
    /* 使盒子为长方形 */
    /* padding: 30% 0; */
    padding-top: 50%;
    /* 顶部内边距设置为100% */
    padding-bottom: 50%;
    /* 底部部内边距设置为100% */
    text-align: center;
    text-decoration: none;
    color: rgb(243, 255, 255);
    border: 2px solid rgb(243, 255, 255);
    /* 设置边框为2px宽的白色双线 */
    overflow: hidden;
    /* 隐藏溢出的内容 */
}

.flex-item a h4 {
    position: relative;
    opacity: 0;
    transition: opacity 0.5s;
    filter: none;
    margin: 12px;
    padding: 5px 10px;
    z-index: 1;
}

.flex-item a:hover h4 {
    opacity: 1;
}

.flex-item a::before {
    content: "";
    /* border-radius: 10px; */
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-position: center;
    background-size: cover;
    z-index: -1;
    filter: none;
    transition: background-size 1s, filter 0.5s;
}

.flex-item a:hover::before {
    filter: blur(6px);
    background-size: 120%;
}

.flex-item a.PetGloves::before {
    background-image: url(../assets/images/graphicDesign/glovesSquare.png);
}
.flex-item a.FlyBook::before {
    background-image: url(../assets/FlyingBooks/FINAL_Moment1.png);
}
.flex-item a.NOAA::before {
    background-image: url(../assets/images/NOAA/flexNOAA.jpeg);
}

.flex-item a.ATripOfRoots::before {
    background-image: url(../assets/images/ATripOfRoots.png);
}

.flex-item a.Poppybara::before {
    background-image: url(../assets/images/poppybara.png);
}

.flex-item a.WhiteTree::before {
    background-image: url(../assets/images/smallWhiteTree1.png);
}

.flex-item a.CodeInCode::before {
    background-image: url(../assets/images/CodeInCode.png);
}

.flex-item a.ThePool::before {
    background-image: url(../assets/images/ThePool.jpg);
}

.flex-item a.TangibleIllusions::before {
    background-image: url(../assets/images/TangibleIllusions.png);
}

.flex-item a.PhysicalFractal::before {
    background-image: url(../assets/images/PhysicFractal.png);
}

.flex-item a.Theory::before {
    background-image: url(../assets/images/Theory.png);
}

.flex-item a.imageTheoryCreatures::before {
    background-image: url(../assets/images/TheoryCreatures.png);
}

.flex-item a.Amoebas::before {
    background-image: url(../assets/images/Amoebas.jpg);
}

.flex-item a.HandAR::before {
    background-image: url(../assets/images/HandAR.png);
}

.flex-item a.HandARCharacter::before {
    background-image: url(../assets/images/HandARCharacter.png);
}

.flex-item a.RandomFractal::before {
    background-image: url(../assets/images/RandomFractal.png);
}

.flex-item a.EllipseRotating::before {
    background-image: url(../assets/images/EllipseRotating.png);
}

.flex-item a.RandomFractals::before {
    background-image: url(../assets/images/RandomFractals.png);
}

.flex-item a.ChristmasTree::before {
    background-image: url(../assets/images/ChristmasTree.png);
}

.flex-item a.Quotes::before {
    background-image: url(../assets/images/Quotes.png);
}

.flex-item a.Kite::before {
    background-image: url(../assets/images/FlyAKite.png);
}

.flex-item a.FeedingCreatures::before {
    background-image: url(../assets/images/FeeingCreatures.png);
}

.flex-item a.MidTerm::before {
    background-image: url(../assets/images/MidTerm.png);
}

.flex-item a.PM25::before {
    background-image: url(../assets/images/PM25.png);
}

.flex-item a.OpticalFlow::before {
    background-image: url(../assets/images/OpticalFlow.png);
}

.flex-item a.SlientCalcite::before {
    background-image: url(../Illustrations/images/沉默的方解石.jpg);
}


/* want a different background image for each project? */
/* try give each a tag a unique id in your HTML and then set different background images here*/
/* EXAMPLE CSS: won't work if you just un-comment this:*/
/* .flex-item a#my-special-id{
    background-image: url(../assets/images/custom-image-name.jpeg); 
} */